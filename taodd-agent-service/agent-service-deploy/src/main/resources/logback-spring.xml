<?xml version="1.0" encoding="UTF-8"?>

<configuration>

	<!-- 定义日志的根目录 -->
	<property name="LOG_PATH" value="/logs" />

	<!-- 最大保存历史日志天数 -->
	<property name="LOG_MAX_HISTORY" value="2" />

	<!-- 定义日志文件名称 -->
	<property name="INFO_FILE_NAME" value="esports-info" />
	<property name="WARN_FILE_NAME" value="esports-warn" />
	<property name="ERROR_FILE_NAME" value="esports-error" />
	<property name="RPC_API_FILE_NAME" value="esports-rpc-api" />
	<property name="SYS_API_FILE_NAME" value="esports-sys-api" />
	<property name="SYS_QUARTZ_FILE_NAME"
		value="esports-quartz-log" />

	<!-- 控制台输出 -->
	<appender name="CONSOLE"
		class="ch.qos.logback.core.ConsoleAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<!-- 日志过滤级别 -->
			<level>DEBUG</level>
		</filter>
		<!-- 日志格式化以及输出编码 -->
		<encoder>
			<pattern>[%date]-[%thread] %-5level %logger{2048} -%msg%n</pattern>
			<charset>utf8</charset>
		</encoder>
	</appender>

	<!-- 控制台输出,配置最底级别,方便调式 -->
	<appender name="JUNIT"
		class="ch.qos.logback.core.ConsoleAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ALL</level>
		</filter>
		<encoder>
			<pattern>[%date]-[%thread] %-5level %logger{2048} -%msg%n</pattern>
			<charset>utf8</charset> <!-- 输出编码 -->
		</encoder>
	</appender>


	<!-- 消息日志，记录项目所有消息记录 -->
	<appender name="INFO_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 记录的日志文件的路径及文件名 -->
		<File>${LOG_PATH}/${INFO_FILE_NAME}.log</File>
		<!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_PATH}/${INFO_FILE_NAME}-%d{yyyy-MM-dd}-%i.log
			</FileNamePattern>
			<!--日志文件保留天数 -->
			<maxHistory>${LOG_MAX_HISTORY}</maxHistory>
			<!-- 当日志文件超过maxFileSize指定的大小时，根据上面提到的%i进行日志文件滚动 注意此处配置SizeBasedTriggeringPolicy是无法实现按文件大小进行滚动的，必须配置timeBasedFileNamingAndTriggeringPolicy 
				除按日志记录之外，还配置了日志文件不能超过100Mb，若超过100Mb，日志文件会以索引0开始， 命名日志文件，esport-system-20181219-0.log -->
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- 追加方式记录日志 -->
		<append>true</append>
		<encoder>
			<!-- 日志输出格式： -->
			<pattern>%date [ %thread ] - [ %-5level ] [ %logger{50} : %line ] -
				%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 只接收INFO级别的日志 -->
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 警告日志，记录项目标识的警告级别信息 -->
	<appender name="WARN_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/${WARN_FILE_NAME}.log</File>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_PATH}/${WARN_FILE_NAME}-%d{yyyy-MM-dd}-%i.log
			</FileNamePattern>
			<maxHistory>${LOG_MAX_HISTORY}</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<append>true</append>
		<encoder>
			<pattern>%date [ %thread ] - [ %-5level ] [ %logger{50} : %line ] -
				%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 错误日志，记录项目标识的错误级别信息 -->
	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/${ERROR_FILE_NAME}.log</File>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_PATH}/${ERROR_FILE_NAME}-%d{yyyy-MM-dd}-%i.log
			</FileNamePattern>
			<maxHistory>${LOG_MAX_HISTORY}</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<append>true</append>
		<encoder>
			<!-- 日志输出格式： -->
			<pattern>%date [ %thread ] - [ %-5level ] [ %logger{50} : %line ] -
				%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 异步记录文件 -->
	<appender name="info-asyncFileAppender"
		class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<appender-ref ref="INFO_FILE" />
	</appender>
	<appender name="warn-asyncFileAppender"
		class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<appender-ref ref="WARN_FILE" />
	</appender>
	<appender name="error-asyncFileAppender"
		class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<appender-ref ref="ERROR_FILE" />
	</appender>

	<!-- RPC接口，记录项目内部接口信息 -->
	<appender name="RPC_API_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/${RPC_API_FILE_NAME}.log</File>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_PATH}/${RPC_API_FILE_NAME}-%d{yyyy-MM-dd}-%i.log
			</FileNamePattern>
			<maxHistory>${LOG_MAX_HISTORY}</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<append>true</append>
		<encoder>
			<!-- 日志输出格式： -->
			<pattern>%date [ %thread ] - [ %-5level ] [ %logger{50} : %line ] -
				%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 系统接口，记录项目调用接口信息 -->
	<appender name="SYS_API_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/${SYS_API_FILE_NAME}.log</File>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_PATH}/${SYS_API_FILE_NAME}-%d{yyyy-MM-dd}-%i.log
			</FileNamePattern>
			<maxHistory>${LOG_MAX_HISTORY}</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<append>true</append>
		<encoder>
			<!-- 日志输出格式： -->
			<pattern>%date [ %thread ] - [ %-5level ] [ %logger{50} : %line ] -
				%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 定时任务，记录项目定时任务信息 -->
	<appender name="SYS_QUARTZ_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_PATH}/${SYS_QUARTZ_FILE_NAME}.log</File>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_PATH}/${SYS_QUARTZ_FILE_NAME}-%d{yyyy-MM-dd}-%i.log
			</FileNamePattern>
			<maxHistory>${LOG_MAX_HISTORY}</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<append>true</append>
		<encoder>
			<!-- 日志输出格式： -->
			<pattern>%date [ %thread ] - [ %-5level ] [ %logger{50} : %line ] -
				%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="rpcApiAsyncFileAppender"
		class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>256</queueSize>
		<appender-ref ref="RPC_API_FILE" />
	</appender>

	<appender name="sysApiAsyncFileAppender"
		class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>256</queueSize>
		<appender-ref ref="SYS_API_FILE" />
	</appender>

	<appender name="sysQuartzAppender"
		class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<appender-ref ref="SYS_QUARTZ_FILE" />
	</appender>

	<contextName>esports-system</contextName>

	<!-- 系统调试,打印到控制台 -->
	<springProfile name="junit">
		<root level="DEBUG">
			<appender-ref ref="JUNIT" />
		</root>
		<logger name="com.esports" level="DEBUG" />
	</springProfile>

	<!-- 测试环境,多个使用逗号隔开,打印到控制台 -->
	<springProfile name="test">
		<root level="INFO">
			<appender-ref ref="CONSOLE" />
			<appender-ref ref="info-asyncFileAppender" />
			<appender-ref ref="warn-asyncFileAppender" />
			<appender-ref ref="error-asyncFileAppender" />
		</root>
		<logger name="com.esports" level="INFO" />
		<logger name="org.hibernate" level="INFO" />
		<logger name="org.springframework" level="INFO" />
		<logger name="org.thymeleaf" level="INFO" />
		<!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
		<logger name="org.hibernate.type.descriptor.sql.BasicBinder"
			level="TRACE" />
		<logger name="org.hibernate.type.descriptor.sql.BasicExtractor"
			level="DEBUG" />
		<logger name="org.hibernate.SQL" level="DEBUG" />
		<logger name="org.hibernate.engine.QueryParameters"
			level="DEBUG" />
		<logger name="org.hibernate.engine.query.HQLQueryPlan"
			level="DEBUG" />

		<logger name="callInternalApiLogger" additivity="false"
			level="INFO">
			<appender-ref ref="rpcApiAsyncFileAppender" />
			<appender-ref ref="CONSOLE" />
		</logger>
		<logger name="callExternalApiLogger" additivity="false" level="INFO">
			<appender-ref ref="sysApiAsyncFileAppender" />
			<appender-ref ref="CONSOLE" />
		</logger>
		<logger name="callTaskLogger" additivity="false" level="INFO">
			<appender-ref ref="sysQuartzAppender" />
			<appender-ref ref="CONSOLE" />
		</logger>
	</springProfile>

	<!-- 开发环境,多个使用逗号隔开,打印到控制台 -->
	<springProfile name="dev">
		<root level="DEBUG">
			<appender-ref ref="CONSOLE" />
			<appender-ref ref="info-asyncFileAppender" />
			<appender-ref ref="warn-asyncFileAppender" />
			<appender-ref ref="error-asyncFileAppender" />
		</root>
		<logger name="com.netflix" level="DEBUG" />
		<logger name="com.esports" level="DEBUG" />
		<logger name="com.alibaba" level="DEBUG" />
		<!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
		<logger name="org.hibernate" level="INFO" />
		<logger name="org.springframework" level="INFO" />
		<logger name="org.thymeleaf" level="INFO" />
		<!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
		<logger name="org.hibernate.type.descriptor.sql.BasicBinder"
			level="TRACE" />
		<logger name="org.hibernate.type.descriptor.sql.BasicExtractor"
			level="DEBUG" />
		<logger name="org.hibernate.SQL" level="DEBUG" />
		<logger name="org.hibernate.engine.QueryParameters"
			level="DEBUG" />
		<logger name="org.hibernate.engine.query.HQLQueryPlan"
			level="DEBUG" />

		<logger name="callApiLogger" additivity="false" level="DEBUG">
			<appender-ref ref="rpcApiAsyncFileAppender" />
			<appender-ref ref="CONSOLE" />
		</logger>
		<logger name="callExternalApiLogger" additivity="false"
			level="DEBUG">
			<appender-ref ref="sysApiAsyncFileAppender" />
			<appender-ref ref="CONSOLE" />
		</logger>
		<logger name="callTaskLogger" additivity="false" level="DEBUG">
			<appender-ref ref="sysQuartzAppender" />
			<appender-ref ref="CONSOLE" />
		</logger>
	</springProfile>

	<!-- 生产环境,打印控制台和输出到文件 -->
	<springProfile name="prod">
		<root level="WARN">
			<appender-ref ref="CONSOLE" />
			<appender-ref ref="info-asyncFileAppender" />
			<appender-ref ref="warn-asyncFileAppender" />
			<appender-ref ref="error-asyncFileAppender" />
		</root>
		<logger name="com.esports" level="INFO" />
		<!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
		<logger name="org.hibernate" level="WARN" />
		<logger name="org.springframework" level="WARN" />
		<logger name="org.thymeleaf" level="WARN" />
		<logger name="org.apache.http" level="INFO" />
		<logger name="org.hibernate.type.descriptor.sql.BasicBinder"
			level="WARN" />
		<logger name="org.hibernate.type.descriptor.sql.BasicExtractor"
			level="WARN" />
		<logger name="org.hibernate.SQL" level="WARN" />
		<logger name="org.hibernate.engine.QueryParameters"
			level="WARN" />
		<logger name="org.hibernate.engine.query.HQLQueryPlan"
			level="WARN" />

		<logger name="callInternalApiLogger" additivity="false"
			level="INFO">
			<appender-ref ref="rpcApiAsyncFileAppender" />
		</logger>
		<logger name="callExternalApiLogger" additivity="false"
			level="INFO">
			<appender-ref ref="sysApiAsyncFileAppender" />
		</logger>
		<logger name="callTaskLogger" additivity="false" level="INFO">
			<appender-ref ref="sysQuartzAppender" />
		</logger>
	</springProfile>
</configuration>